name: Flutter Security Scan

on:
  push:
    branches: [main]

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'

      # Etapa 1: Tentar baixar APK de uma execução anterior
      - name: Tentar baixar APK salvo anteriormente
        id: baixar_apk
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: ./final_apk

      # Etapa 2: Verificar se o APK foi baixado com sucesso
      - name: Verificar existência do APK
        id: apk_check
        run: |
          if [ -f final_apk/app-release.apk ]; then
            echo "APK_FOUND=true" >> $GITHUB_OUTPUT
          else
            echo "APK_FOUND=false" >> $GITHUB_OUTPUT
          fi

      # Etapa 3: Fazer build somente se o APK não foi encontrado
      - name: Build APK
        if: steps.apk_check.outputs.APK_FOUND == 'false'
        run: |
          cd Shortzz_flutter/Shortzz
          flutter pub get
          flutter build apk --release
          mkdir -p ../../final_apk
          cp build/app/outputs/flutter-apk/app-release.apk ../../final_apk/

      # Etapa 4: Fazer upload do APK somente se ele foi gerado nesta execução
      - name: Upload APK como artefato
        if: steps.apk_check.outputs.APK_FOUND == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: final_apk/app-release.apk

      # Etapa 5: Enviar o APK para o MobSF
      - name: Upload APK para MobSF
        run: |
          response=$(curl -s -X POST "http://localhost:8080/api/v1/upload" \
            -H "Authorization: ${{ secrets.MOBSF_API_KEY }}" \
            -F "file=@final_apk/app-release.apk")

          echo "Resposta MobSF: $response"
          echo "$response" > mobsf-response.json
          echo "SCAN_HASH=$(echo "$response" | jq -r '.hash')" >> $GITHUB_ENV

      # Etapa 6: Baixar relatórios
      - name: Upload APK para MobSF
        run: |
         response=$(curl -s -X POST "${{ secrets.MOBSF_BASE_URL }}/api/v1/upload" \
         -H "Authorization: ${{ secrets.MOBSF_API_KEY }}" \
         -F "file=@final_apk/app-release.apk")

         echo "Resposta MobSF: $response"
         echo "$response" > mobsf-response.json
         echo "SCAN_HASH=$(echo "$response" | jq -r '.hash')" >> $GITHUB_ENV

      - name: Baixar relatório JSON
        run: |
          curl -X POST "http://localhost:8080/api/v1/report_json" \
            -H "Authorization: ${{ secrets.MOBSF_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{\"hash\":\"$SCAN_HASH\"}" \
            -o mobsf-report.json

      # Etapa 7: Upload de todos os artefatos de resultado
      - name: Salvar relatórios e APK
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-result
          path: |
            final_apk/app-release.apk
            mobsf-report.pdf
            mobsf-report.json
            mobsf-response.json
